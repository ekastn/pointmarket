// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package gen

import (
	"context"
	"database/sql"
)

type Querier interface {
	// User Badges --
	AwardBadgeToUser(ctx context.Context, arg AwardBadgeToUserParams) (sql.Result, error)
	CountBadges(ctx context.Context) (int64, error)
	CountCourses(ctx context.Context) (int64, error)
	CountCoursesByOwnerID(ctx context.Context, ownerID int64) (int64, error)
	CountCoursesWithEnrollmentStatus(ctx context.Context, arg CountCoursesWithEnrollmentStatusParams) (int64, error)
	CountLessonsByCourseID(ctx context.Context, courseID int64) (int64, error)
	CountProductCategories(ctx context.Context) (int64, error)
	CountProducts(ctx context.Context, arg CountProductsParams) (int64, error)
	CountSearchedUsers(ctx context.Context, arg CountSearchedUsersParams) (int64, error)
	CountStudents(ctx context.Context, arg CountStudentsParams) (int64, error)
	// Assignments --
	CreateAssignment(ctx context.Context, arg CreateAssignmentParams) (sql.Result, error)
	// Badges --
	CreateBadge(ctx context.Context, arg CreateBadgeParams) (sql.Result, error)
	CreateCourse(ctx context.Context, arg CreateCourseParams) (sql.Result, error)
	CreateLesson(ctx context.Context, arg CreateLessonParams) (sql.Result, error)
	CreateLikertResult(ctx context.Context, arg CreateLikertResultParams) error
	// Missions --
	CreateMission(ctx context.Context, arg CreateMissionParams) (sql.Result, error)
	CreateOrder(ctx context.Context, arg CreateOrderParams) (sql.Result, error)
	// Points Transactions and Stats Helpers --
	CreatePointsTransaction(ctx context.Context, arg CreatePointsTransactionParams) (sql.Result, error)
	CreateProduct(ctx context.Context, arg CreateProductParams) (sql.Result, error)
	// Product Categories --
	CreateProductCategory(ctx context.Context, arg CreateProductCategoryParams) (sql.Result, error)
	CreateQuestion(ctx context.Context, arg CreateQuestionParams) (sql.Result, error)
	CreateQuestionnaire(ctx context.Context, arg CreateQuestionnaireParams) (sql.Result, error)
	// Quizzes --
	CreateQuiz(ctx context.Context, arg CreateQuizParams) (sql.Result, error)
	// Quiz Questions --
	CreateQuizQuestion(ctx context.Context, arg CreateQuizQuestionParams) (sql.Result, error)
	// Student Assignments --
	CreateStudentAssignment(ctx context.Context, arg CreateStudentAssignmentParams) (sql.Result, error)
	// Student Quizzes --
	CreateStudentQuiz(ctx context.Context, arg CreateStudentQuizParams) (sql.Result, error)
	CreateTextAnalysisSnapshot(ctx context.Context, arg CreateTextAnalysisSnapshotParams) error
	CreateUser(ctx context.Context, arg CreateUserParams) (sql.Result, error)
	CreateUserLearningStyle(ctx context.Context, arg CreateUserLearningStyleParams) error
	// User Missions --
	CreateUserMission(ctx context.Context, arg CreateUserMissionParams) (sql.Result, error)
	CreateVarkOption(ctx context.Context, arg CreateVarkOptionParams) (sql.Result, error)
	CreateVarkResult(ctx context.Context, arg CreateVarkResultParams) error
	CreateWeeklyEvaluation(ctx context.Context, arg CreateWeeklyEvaluationParams) error
	// Atomically decrement stock if available (non-null and > 0)
	DecrementProductStockIfAvailable(ctx context.Context, id int64) (sql.Result, error)
	DeleteAssignment(ctx context.Context, id int64) error
	DeleteBadge(ctx context.Context, id int64) error
	DeleteCourse(ctx context.Context, id int64) error
	DeleteLesson(ctx context.Context, id int64) error
	DeleteMission(ctx context.Context, id int64) error
	DeleteProduct(ctx context.Context, id int64) error
	DeleteProductCategory(ctx context.Context, id int32) error
	DeleteQuestion(ctx context.Context, id int32) error
	DeleteQuestionnaire(ctx context.Context, id int32) error
	DeleteQuiz(ctx context.Context, id int64) error
	DeleteQuizQuestion(ctx context.Context, id int64) error
	DeleteStudentAssignment(ctx context.Context, id int64) error
	DeleteStudentQuiz(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	DeleteUserMission(ctx context.Context, id int64) error
	DeleteVarkOption(ctx context.Context, id int32) error
	// Student Enrollment --
	EnrollStudentInCourse(ctx context.Context, arg EnrollStudentInCourseParams) (sql.Result, error)
	GetActiveQuestionnaires(ctx context.Context) ([]Questionnaire, error)
	GetActiveStudents(ctx context.Context) ([]GetActiveStudentsRow, error)
	GetAdminStatistic(ctx context.Context) (GetAdminStatisticRow, error)
	GetAssignmentByCourseIDAndOwnerID(ctx context.Context, arg GetAssignmentByCourseIDAndOwnerIDParams) (Assignment, error)
	GetAssignmentByID(ctx context.Context, id int64) (Assignment, error)
	GetAssignments(ctx context.Context) ([]Assignment, error)
	GetAssignmentsByCourseID(ctx context.Context, courseID int64) ([]Assignment, error)
	GetAssignmentsByOwnerID(ctx context.Context, ownerID int64) ([]Assignment, error)
	GetBadgeByID(ctx context.Context, id int64) (Badge, error)
	GetBadges(ctx context.Context, arg GetBadgesParams) ([]Badge, error)
	GetCoachingsByIDs(ctx context.Context, ids []int64) ([]Coaching, error)
	GetCourseByID(ctx context.Context, id int64) (Course, error)
	GetCourseBySlug(ctx context.Context, slug string) (Course, error)
	GetCourses(ctx context.Context, arg GetCoursesParams) ([]Course, error)
	GetCoursesByOwnerID(ctx context.Context, arg GetCoursesByOwnerIDParams) ([]Course, error)
	GetCoursesWithEnrollmentStatus(ctx context.Context, arg GetCoursesWithEnrollmentStatusParams) ([]GetCoursesWithEnrollmentStatusRow, error)
	GetLatestLikertResultByType(ctx context.Context, arg GetLatestLikertResultByTypeParams) (StudentQuestionnaireLikertResult, error)
	GetLatestUserLearningStyle(ctx context.Context, userID int64) (StudentLearningStyle, error)
	GetLatestVarkResult(ctx context.Context, userID int64) (GetLatestVarkResultRow, error)
	GetLessonByID(ctx context.Context, id int64) (Lesson, error)
	GetLessonsByCourseID(ctx context.Context, arg GetLessonsByCourseIDParams) ([]Lesson, error)
	GetLikertStatsByStudent(ctx context.Context, userID int64) ([]GetLikertStatsByStudentRow, error)
	GetMaxOrdinalForQuiz(ctx context.Context, quizID int64) (interface{}, error)
	GetMissionByID(ctx context.Context, id int64) (Mission, error)
	GetMissions(ctx context.Context) ([]Mission, error)
	GetMissionsByIDs(ctx context.Context, ids []int64) ([]Mission, error)
	GetProductByID(ctx context.Context, id int64) (GetProductByIDRow, error)
	GetProductCategories(ctx context.Context, arg GetProductCategoriesParams) ([]ProductCategory, error)
	GetProductCategoryByID(ctx context.Context, id int32) (ProductCategory, error)
	// Course Details for Course-type Products --
	GetProductCourseDetailByProductID(ctx context.Context, productID int64) (ProductCourseDetail, error)
	GetProducts(ctx context.Context, arg GetProductsParams) ([]GetProductsRow, error)
	GetProductsByIDs(ctx context.Context, ids []int64) ([]Product, error)
	GetPunishmentsByIDs(ctx context.Context, ids []int64) ([]Punishment, error)
	GetQuestionnaireByID(ctx context.Context, id int32) (Questionnaire, error)
	GetQuestionnaireByType(ctx context.Context, type_ QuestionnairesType) (Questionnaire, error)
	GetQuestionnaires(ctx context.Context) ([]Questionnaire, error)
	GetQuestionsByQuestionnaireID(ctx context.Context, questionnaireID int32) ([]QuestionnaireQuestion, error)
	GetQuizByID(ctx context.Context, id int64) (Quiz, error)
	GetQuizQuestionByID(ctx context.Context, id int64) (QuizQuestion, error)
	GetQuizQuestionsByQuizID(ctx context.Context, quizID int64) ([]QuizQuestion, error)
	GetQuizzes(ctx context.Context) ([]Quiz, error)
	GetQuizzesByCourseID(ctx context.Context, courseID int64) ([]Quiz, error)
	GetQuizzesByOwnerID(ctx context.Context, ownerID int64) ([]Quiz, error)
	GetRewardsByIDs(ctx context.Context, ids []int64) ([]Reward, error)
	GetStudentAssignmentByID(ctx context.Context, id int64) (StudentAssignment, error)
	GetStudentAssignmentByIDs(ctx context.Context, arg GetStudentAssignmentByIDsParams) (StudentAssignment, error)
	GetStudentAssignmentsByAssignmentID(ctx context.Context, assignmentID int64) ([]GetStudentAssignmentsByAssignmentIDRow, error)
	GetStudentAssignmentsByStudentID(ctx context.Context, userID int64) ([]GetStudentAssignmentsByStudentIDRow, error)
	GetStudentByStudentID(ctx context.Context, studentID string) (GetStudentByStudentIDRow, error)
	GetStudentByUserID(ctx context.Context, userID int64) (GetStudentByUserIDRow, error)
	GetStudentCoursesByUserID(ctx context.Context, userID int64) ([]GetStudentCoursesByUserIDRow, error)
	GetStudentLearningStyle(ctx context.Context, userID int64) (StudentLearningStyle, error)
	GetStudentQuizByID(ctx context.Context, id int64) (StudentQuiz, error)
	GetStudentQuizByIDs(ctx context.Context, arg GetStudentQuizByIDsParams) (StudentQuiz, error)
	GetStudentQuizzesByQuizID(ctx context.Context, quizID int64) ([]GetStudentQuizzesByQuizIDRow, error)
	GetStudentQuizzesByStudentID(ctx context.Context, userID int64) ([]GetStudentQuizzesByStudentIDRow, error)
	GetStudentStatistic(ctx context.Context, id int64) (GetStudentStatisticRow, error)
	// Aggregates latest AMS, MSLQ, and VARK per course for a given teacher (owner)
	GetTeacherCourseInsights(ctx context.Context, arg GetTeacherCourseInsightsParams) ([]GetTeacherCourseInsightsRow, error)
	GetTeacherStatistic(ctx context.Context, arg GetTeacherStatisticParams) (GetTeacherStatisticRow, error)
	GetUserBadgesByUserID(ctx context.Context, userID int64) ([]GetUserBadgesByUserIDRow, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id int64) (User, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	// Fetch single user mission with mission detail by ID
	GetUserMissionByID(ctx context.Context, id int64) (GetUserMissionByIDRow, error)
	GetUserMissionsByUserID(ctx context.Context, userID int64) ([]GetUserMissionsByUserIDRow, error)
	GetUserProfileByID(ctx context.Context, id int64) (GetUserProfileByIDRow, error)
	// User Stats --
	GetUserStats(ctx context.Context, userID int64) (UserStat, error)
	GetUsers(ctx context.Context) ([]User, error)
	GetVarkOptionsByQuestionnaireID(ctx context.Context, questionnaireID int32) ([]QuestionnaireVarkOption, error)
	GetWeeklyEvaluationByStudentAndQuestionnaireAndDueDate(ctx context.Context, arg GetWeeklyEvaluationByStudentAndQuestionnaireAndDueDateParams) (int64, error)
	GetWeeklyEvaluationResult(ctx context.Context, weeklyEvaluationID sql.NullInt64) (GetWeeklyEvaluationResultRow, error)
	GetWeeklyEvaluationsByStudentID(ctx context.Context, arg GetWeeklyEvaluationsByStudentIDParams) ([]GetWeeklyEvaluationsByStudentIDRow, error)
	GetWeeklyEvaluationsForTeacherDashboard(ctx context.Context, dateSUB interface{}) ([]GetWeeklyEvaluationsForTeacherDashboardRow, error)
	InitUserStatsIfMissing(ctx context.Context, userID int64) error
	InsertStudent(ctx context.Context, arg InsertStudentParams) error
	ListPointsTransactionsByUserID(ctx context.Context, arg ListPointsTransactionsByUserIDParams) ([]PointsTransaction, error)
	ListPrograms(ctx context.Context) ([]Program, error)
	MarkOverdueWeeklyEvaluations(ctx context.Context) error
	RevokeBadgeFromUser(ctx context.Context, arg RevokeBadgeFromUserParams) error
	SearchStudents(ctx context.Context, arg SearchStudentsParams) ([]SearchStudentsRow, error)
	SearchUsers(ctx context.Context, arg SearchUsersParams) ([]User, error)
	UnenrollStudentFromCourse(ctx context.Context, arg UnenrollStudentFromCourseParams) error
	UpdateAssignment(ctx context.Context, arg UpdateAssignmentParams) error
	UpdateBadge(ctx context.Context, arg UpdateBadgeParams) error
	UpdateCourse(ctx context.Context, arg UpdateCourseParams) error
	UpdateLesson(ctx context.Context, arg UpdateLessonParams) error
	UpdateMission(ctx context.Context, arg UpdateMissionParams) error
	UpdateProduct(ctx context.Context, arg UpdateProductParams) error
	UpdateProductCategory(ctx context.Context, arg UpdateProductCategoryParams) error
	UpdateProductStock(ctx context.Context, arg UpdateProductStockParams) error
	UpdateQuestion(ctx context.Context, arg UpdateQuestionParams) error
	UpdateQuestionnaire(ctx context.Context, arg UpdateQuestionnaireParams) error
	UpdateQuiz(ctx context.Context, arg UpdateQuizParams) error
	UpdateQuizQuestion(ctx context.Context, arg UpdateQuizQuestionParams) error
	UpdateStudentAssignment(ctx context.Context, arg UpdateStudentAssignmentParams) error
	UpdateStudentByUserID(ctx context.Context, arg UpdateStudentByUserIDParams) error
	UpdateStudentQuiz(ctx context.Context, arg UpdateStudentQuizParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
	UpdateUserMissionStatus(ctx context.Context, arg UpdateUserMissionStatusParams) error
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	UpdateUserProfile(ctx context.Context, arg UpdateUserProfileParams) error
	UpdateUserRole(ctx context.Context, arg UpdateUserRoleParams) error
	UpdateUserStatsPoints(ctx context.Context, arg UpdateUserStatsPointsParams) error
	UpdateVarkOption(ctx context.Context, arg UpdateVarkOptionParams) error
	UpdateWeeklyEvaluationStatus(ctx context.Context, arg UpdateWeeklyEvaluationStatusParams) error
	UpsertUserProfile(ctx context.Context, arg UpsertUserProfileParams) error
}

var _ Querier = (*Queries)(nil)
